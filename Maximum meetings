import java.util.Arrays;

public class Solution {
    public static int maximumMeetings(int[] start, int[] end) {
        int n = start.length;
        Meeting[] meetings = new Meeting[n];
        
        // Create Meeting objects and store them in an array
        for (int i = 0; i < n; i++) {
            meetings[i] = new Meeting(start[i], end[i]);
        }
        
        // Sort meetings based on their end times
        Arrays.sort(meetings, (a, b) -> a.end - b.end);
        
        int count = 1; // Count of meetings that can be organized
        int endTime = meetings[0].end; // End time of the first meeting
        
        // Iterate through sorted meetings to find maximum number of meetings
        for (int i = 1; i < n; i++) {
            if (meetings[i].start > endTime) {
                count++;
                endTime = meetings[i].end;
            }
        }
        
        return count;
    }
    
    // Meeting class to represent a meeting with start and end times
    static class Meeting {
        int start;
        int end;
        
        Meeting(int s, int e) {
            start = s;
            end = e;
        }
    }
}
